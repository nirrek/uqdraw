/* Box sizing reset, see paul irish article for details */
html { box-sizing: border-box; }
*, *:before, *:after { box-sizing: inherit; }

/* Getting the height 100% down the chain */
html, body, #react, .App {
  height: 100%;
}

body { max-height: 100%; overflow: auto; }
.noScrollOnOverflow { overflow-y: hidden; }

html, body {
  margin: 0;
  font-family: 'Source Sans Pro', 'Helvetica Neue';
  font-size: 16px; /* establish REM baseline */
  line-height: 1.5;
  background-color: #F7FAFE;
}

header {
  background-color: #523B99;
  text-align: center;
  flex-shrink: 0;
}




/* From other project aboe here */
/* -------------------------------------------------------------------------- */

.App {
}

/* Base grid styles */
.Grid { display: flex; }
.Grid-cell { flex: 1; }

/* With gutters */
.Grid--gutters { margin: -1em 0 0 -1em; }
.Grid--gutters > .Grid-cell { padding: 1em 0 0 1em; }

/* Alignment per row */
.Grid--top { align-items: flex-start; }
.Grid--bottom { align-items: flex-end; }
.Grid--center { align-items: center; }

/* Alignment per cell */
.Grid-cell--top { align-self: flex-start; }
.Grid-cell--bottom { align-self: flex-end; }
.Grid-cell--center { align-self: center; }

.scrollbar {
  -webkit-transform: translate3d(0,0,0);
  -webkit-overflow-scrolling: touch;
}
.scrollbar::-webkit-scrollbar {
  height: 13px;
  width: 13px;
}
.scrollbar::-webkit-scrollbar-track-piece {
  background: rgba(0,0,0,.15);
}
.scrollbar::-webkit-scrollbar-button {
  display: block;
  height: 5px;
  width: 5px;
}
.scrollbar::-webkit-scrollbar-track-piece:vertical:start {
    border-radius: 5px 5px 0 0
}
.scrollbar::-webkit-scrollbar-track-piece:vertical:end {
    border-radius: 0 0 5px 5px
}
.scrollbar::-webkit-scrollbar-track-piece:horizontal:start {
    border-radius: 5px 0 0 5px
}
.scrollbar::-webkit-scrollbar-track-piece:horizontal:end {
    border-radius: 0 5px 5px 0
}
.scrollbar::-webkit-scrollbar-thumb:horizontal,.scrollbar::-webkit-scrollbar-thumb:vertical {
    background: rgba(255,255,255,.4);
    border-radius: 5px;
    display: block;
    height: 50px
}
.scrollbar::-webkit-scrollbar-button:end:increment,.scrollbar::-webkit-scrollbar-button:start:decrement {
    background: 0 0;
    display: none
}

/*
 * Transparent label/input pair
 * This should be made into a component. Basically you have a label that sits
 * behind the textarea that disappears when there is content in the input.
 */
.AdvancedInput {
  height: 100%;
  position: relative;
  text-align: center;
  font-size: 22px;
}

.TransparentLabel {
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  position: absolute;
  z-index: 0;
  transition: opacity 150ms ease-in-out;
  color: #999;
}

.TransparentLabel--hidden {
  opacity: 0;
}

textarea {
  width: 100%;
  height: 100%;
  background-color: transparent;
  position: relative;
  z-index: 1;
  padding: 0;
  margin: 0;
  border: none;
  text-align: center;
}

textarea:focus {
  outline: none;
}

input {
  width: 100%;
  background-color: transparent;
  position: relative;
  z-index: 1;
  padding: 0;
  margin: 0;
  border: none;
  text-align: center;
}

input:focus {
  outline: none;
}

/* Action Bar */
.Action--eraser > .Action-icon {
  background-image: url('../images/eraser.svg');
}

.fullscreen {
  background-image: url('../images/arrows_expand.svg');
}

/*
 * Media Queries
 */
@media(max-width: 360px) {
  .LogoBar span {
    padding: 10px 0 !important;
  }

  .MainContainer {
    margin-top: 0 !important;
  }

  h1 { font-size: 1.5em; }
}
